

% keep the above two blank lines

==  Configuring the Lion Catalogue server ==

The 'Lion' server provides web mapping services for the SAC Catalogue.

It contains the following key components:

- apache web server
- mapserver cgi with ecw support via custom built gdal
- tilecache
- an instance of the django catalogue software used
- IBM informix client sdk software
- the python informix DB adapter
- 

In addition the lion server is connected to two 14TB Fujitsu Siemens storage arrays.

The Server is an IA 64 processor machine installed with ubuntu server 10.04 LTS.

=== Package installations ===

```
sudo apt-get install bc xterm build-essential lxde rpm mc sun-java6-jre \
firefox vim ntpdate lxde xinit rpl django python-django subversion \
utidy python-utidylib python-psycopg2 python-geoip python-django-registration
```

=== Informix Client Setup ===

When following the Informix install procedure, do it as root locally on
the server since I had problems trying to run the sdk setup tool remotely over
an ssh -X connection.

For specific notes on how to set up the client see 003-3-informix_access.t2t

=== Nightly database sync ===

We should sync the ACS data to our own catalogue database nightly. When all 
the prerequisites are installed on the Lion server, the updateInformix.sh script 
can be used to do this on an ad hoc basis. Automating the process requires 
creation of a cron job:

```
crontab -e
```

Now add the following (adjusing paths if needed):

```
# Added by Tim for others to see how crontab works
#*     *     *     *     *  command to be executed
#-     -     -     -     -
#|     |     |     |     |
#|     |     |     |     +----- day of week (0 - 6) (Sunday=0)
#|     |     |     +------- month (1 - 12)
#|     |     +--------- day of month (1 - 31)
#|     +----------- hour (0 - 23)
#+------------- min (0 - 59)


# Run a test command every minute to see if crontab is working nicely
# comment out when done testing
#*/1 * * * * date >> /tmp/date.txt

# Run informix stats update nightly to keep responsiveness good
# Job will run 5 min after midnight
5 0 * * * /home/timlinux/dev/python/sac_catalogue/updateInformix.sh
# Job will run 2:05 am each day
5 2 * * * /home/timlinux/bin/pgbackups
```

The second job described above takes a backup of the gis and catalogue 
databases on a nightly basis. The pgbackups script looks like this:

```
#/bin/bash

cd /mnt/cataloguestorage/backups/
tar cfz /mnt/cataloguestorage/backups/opt_`date +%d%B%Y`.tar.gz /opt/
export PGPASSWORD=XXXXX

pg_dump -U timlinux -h elephant -i -Fc -f gis_postgis_`date +%d%B%Y`.dmp -x -O gis
pg_dump -U timlinux -h elephant -i -Fc -f sac_postgis_`date +%d%B%Y`.dmp -x -O sac

```

To restore you do:

```
createdb sac
createdb gis
pg_restore sac_[filename].dmp | psql sac
pg_restore gis_[filename].dmp | psql gis
```

=== Compile and install GDAL ===


==== Building with ECW Support ====

**Note:** you can only compress images up to 500mb (though as far as I know
there is no limit to decompression size)

Install dependencies:

```
sudo apt-get install build-essential libjpeg62-dev libtiff4-dev
```


Go to the erdas ecw sdk web page:

http://www.erdas.com/Products/ERDASProductInformation/tabid/84/CurrentID/1142/Default.aspx

(or just search their site for 'ecw sdk')

Get the ECW JPEG2000 Codec SDK Source Code (second item listed - first if win version)

After the download you should have:

```
ecw_jpeg_2000_sdk_3_3_source.zip
```

Now unzip it:

```
cd /tmp
unzip ecw_jpeg_2000_sdk_3_3_source.zip
unzip ImageCompressionSDKSourceCode3.3Setup_20070509.zip
sudo mv libecwj2-3.3 /usr/local/src/
cd /usr/local/src/
sudo chown -R timlinux libecwj2-3.3/
cd libecwj2-3.3
```

Make user you have a gnu build toolchain installed:

```
sudo apt-get install build-essential
```

Now build the ecw lib:

```
./configure
make
sudo make install
```

Next gdal must be (re)built with the ecw flag:

```
cd <gdal src>
make clean
./configure --with-libtiff=internal --with-geotiff=internal \
  --with-ecw=/usr/local --with-python
make -j8
sudo make install
```

See also http://trac.osgeo.org/gdal/wiki/ECW

We configure gdal to build with its own internal copy of libtiff otherwise we 
encounter problems with assertion errors if the system tiff lib is not compatible.
(see http://trac.osgeo.org/gdal/ticket/3139 for more details).

=== Gdal MrSid Support ===

To add mr sid support, you need the MrSid geosdk and then to reconfigure and build gdal like this:

```
./configure --with-libtiff=internal \
            --with-geotiff=internal \
            --with-ecw=/usr/local \
            --with-python \
            --with-mrsid=/usr/local/Geo_DSDK-7.0.0.2167/ \
            --without-jp2mrs
```

=== Hdf4 and Hdf5 support ===

```
sudo apt-get install libhdf5-serial-dev libhdf5-serial-1.6.6-0 libhdf4g-dev libhdf4g libhdf4g-doc
```


```
cd <gdal src>
make clean
./configure --with-ecw=/usr/local
make -j8
sudo make install
```

=== Set up the web mapping dir ===

**TODO:** Update these notes to use git rather.

The web mapping dir contains mapserver configuration files and resources. It
should be checked out of SVN and then the map.templ files copied over to map
files. The .templ files are stored as templates because they contain sensitive
info such as passwords for database connections.

```
cd /opt
svn co https://196.35.94.196/svn/sac/python/sac_catalogue/mapserver webmapping
```

(You may need to adjust permissions of /opt in order to be allowed to do a
check out into it)

Now copy each of the mapfile templates listed below and then update them to 
have appropriate credentials for database access.

```
cd mapfiles
for FILE in *.templ; do NEWFILE=$(echo "$FILE" | sed 's/\.templ//g'); \
  cp $FILE $NEWFILE; done
```


=== Mapserver with fastcgi ===

First of all you need to compile mapserver from source since we need 
ecw and MrSid support. See mapserver_notes.t2t for detailed runthrough.

Ensure that after doing the above, your mapserver install supports fastcgi:

```
/usr/lib/cgi-bin/mapserv -v MapServer version 5.0.3 
OUTPUT=GIF OUTPUT=PNG OUTPUT=JPEG OUTPUT=WBMP OUTPUT=SVG SUPPORTS=PROJ
SUPPORTS=AGG SUPPORTS=FREETYPE SUPPORTS=WMS_SERVER SUPPORTS=WMS_CLIENT
SUPPORTS=WFS_SERVER SUPPORTS=WFS_CLIENT SUPPORTS=WCS_SERVER SUPPORTS=FASTCGI
SUPPORTS=THREADS SUPPORTS=GEOS INPUT=EPPL7 INPUT=POSTGIS INPUT=OGR INPUT=GDAL
INPUT=SHAPEFILE
```


```
sudo apt-get install libapache2-mod-fcgid
```

Add these map file paths to your /etc/apache2/sites-enabled/default file:

```
NameVirtualHost *
<VirtualHost *>
  ServerAdmin tim@linfiniti.com 
  ServerName 196.35.94.243
  DocumentRoot /var/www/
  #set to anything to ensure only explicitly named mapfiles are used
  SetEnv MS_MAP_NO_PATH "foo"
  #set the ZA_VECTOR e.g. http://localhost/cgi-bin/mapserv?map=ZA_VECTOR&mode=...
  SetEnv ZA_VECTOR "/opt/webmapping/mapfiles/za_vector.map"
  SetEnv ZA_VECTOR_TEST "/opt/webmapping/mapfiles/za_vector_test.map"
  SetEnv ZA_SPOT2007 "/opt/webmapping/mapfiles/za_vector_spot2007_2_5m_ecw.map"
  SetEnv ZA_SPOT2008 "/opt/webmapping/mapfiles/za_vector_spot2008_2_5m_ecw.map"
  SetEnv ZA_SPOT2009 "/opt/webmapping/mapfiles/za_vector_spot2009_2_5m_ecw.map"
  SetEnv ZA_SPOT2010 "/opt/webmapping/mapfiles/za_vector_spot2010_2_5m_tif.map"
  SetEnv ZA_SPOT10m2007 "/opt/webmapping/mapfiles/za_vector_spot2007_10m_ecw.map"
  SetEnv ZA_SPOT10m2008 "/opt/webmapping/mapfiles/za_vector_spot2008_10m_ecw.map"
  SetEnv ZA_SPOT10m2009 "/opt/webmapping/mapfiles/za_vector_spot2009_10m_ecw.map"
  SetEnv L7_MOSAIC "/opt/webmapping/mapfiles/landsat7-global-mosaic.map"
  SetEnv ZA_NBI "/opt/webmapping/mapfiles/za_nbi.map"
  SetEnv WORLD "/opt/webmapping/mapfiles/world.map"
  SetEnv SEARCHES "/opt/webmapping/mapfiles/searches.map"
  SetEnv CART "/opt/webmapping/mapfiles/cart.map"
  SetEnv VISITORS "/opt/webmapping/mapfiles/visitors.map"
  <Directory /var/www/>
    Options Indexes FollowSymLinks MultiViews
    AllowOverride None
    Order allow,deny
    allow from all
  </Directory>

  Alias /ss1 /mnt/cataloguestorage/sumbandilasat/SS1
  <Directory /mnt/cataloguestorage/sumbandilasat/SS1>
    Options Indexes FollowSymLinks MultiViews
    AllowOverride None
    Order allow,deny
    allow from all
  </Directory>

  Alias /shade /mnt/cataloguestorage/data/world/aster_dem/final
  <Directory /mnt/cataloguestorage/data/world/aster_dem/final>
    Options Indexes FollowSymLinks MultiViews
    AllowOverride None
    Order allow,deny
    allow from all
  </Directory>

  # Options for fastcgi support:
  # FastCgiConfig -appConnTimeout 60 -idle-timeout 60 -init-start-delay 1 -minProcesses 2 -maxClassProcesses 20 -startDelay 5

  ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
  <Directory "/usr/lib/cgi-bin">
    #Next two lines added by Tim for PyWPS
    SetEnv PYWPS_CFG /etc/pywps.cfg
    SetEnv PYWPS_PROCESSES /opt/wps-processes/sac
    PythonPath "['/opt/','/opt/wps-processes/sac'] + sys.path"
    AllowOverride None
    #Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
    #changed from above for pywps
    Options +ExecCGI -MultiViews +FollowSymLinks
    Order allow,deny
    Allow from all
  </Directory>

  #Alias and dir below added for pywps
  Alias /wps_outputs/ "/tmp/wps_outputs"
  <Directory "/tmp/wps_outputs/">
      Options Indexes MultiViews FollowSymLinks
      AllowOverride None
  </Directory>

  <Location "/sarmes2">
    AuthType Basic
    AuthName "sac"
    AuthUserFile /etc/apache2/dims.passwd
    Require valid-user
  </Location>


  ErrorLog /var/log/apache2/error.log

  # Possible values include: debug, info, notice, warn, error, crit,
  # alert, emerg.
  LogLevel warn

  CustomLog /var/log/apache2/access.log combined
  ServerSignature On

  # For webmapping
  Alias /tmp/ "/tmp/ms_tmp/"
  # For munin server monitoring
  Alias /munin/ "/var/www/munin/"


  # Reverse proxy to the ordering service on dims
  ProxyRequests Off

  <Proxy *>
  Order deny,allow
  Allow from all
  </Proxy>

  ProxyPass /os4eo http://196.35.94.248:8080/hma/ordering
  ProxyPassReverse /os4eo http://196.35.94.248:8080/hma/ordering



</VirtualHost>


```


=== Proxying Ordering Service Requests ===

The ordering service on jackal is not a publicly accessible server so we
proxy access to it via lion.

```
sudo apt-get install libapache2-mod-proxy-html
sudo a2enmod proxy_http proxy_html headers
```

Now add proxy config to 000-default

```
  # Reverse proxy to the ordering service on dims
  ProxyRequests Off

  <Proxy *>
  Order deny,allow
  Allow from all
  </Proxy>

  ProxyPass /os4eo http://196.35.94.248:8080/hma/ordering
  ProxyPassReverse /os4eo http://196.35.94.248:8080/hma/ordering
```


=== Fibrecat storage arrays config ===



==== Catalogue Storage 1 ====

IP Address: 192.168.1.142

Rack Position: **Upper** device as you look at the rack

A  WWN: 207000c0ff03a2c3 196.35.94.142 Catalogue Storage

```
RAID Controller B       Yes     Failed  System Detected Failure         862821-0743MV00AK       Down
"cataloguestorage" Volume Information
Number  Name                    LUN     Size (Mbytes)
1       cataloguestorage1       0       15002850
```


```
Status  Size (GB)       Manufacturer Model:Revision     Node WWN Serial Number  Chan:LoopID Port0 Port1         Enclosure
Up      1500.30GB       ATA             ST31500341AS    WWN:5000c5001120e443    SN:9VS1CC29     0:11   ----
```


==== Catalogue Storage 2 (old Sarmes Storage) ====

IP Address: 192.168.1.141


A  WWN: 207000c0ff0a66c8 196.35.94.141 Sarmes Storage

Rack Position: **Lower** device as you look at the rack



==== Lion configuration as fibrecat client ====

```
timlinux@lion:~$ dmesg | grep scsi
[    1.505180] scsi0 : ata_piix
[    1.505252] scsi1 : ata_piix
[    1.506339] scsi2 : ata_piix
[    1.506396] scsi3 : ata_piix
[    1.809264] scsi 2:0:0:0: Direct-Access     ATA      ST3750640NS      n/a  PQ: 0 ANSI: 5
[    1.809395] sd 2:0:0:0: Attached scsi generic sg0 type 0
[    1.813674] scsi 3:0:0:0: Direct-Access     ATA      ST3750640NS      n/a  PQ: 0 ANSI: 5
[    1.813810] sd 3:0:0:0: Attached scsi generic sg1 type 0
[    2.271356] scsi4 : qla2xxx
[    2.630121] scsi5 : qla2xxx
[    3.602342] scsi 4:0:0:0: Enclosure         FSC      FibreCAT_SX1     J200 PQ: 0 ANSI: 4
[    3.603234] scsi 4:0:1:0: Enclosure         FSC      FibreCAT_SX1     J200 PQ: 0 ANSI: 4
[    3.610832] scsi 4:0:0:0: Attached scsi generic sg2 type 13
[    3.610957] scsi 4:0:1:0: Attached scsi generic sg3 type 13
[    3.962310] scsi 5:0:0:0: Direct-Access     FSC      FibreCAT_SX1     J110 PQ: 0 ANSI: 3
[    3.963175] scsi 5:0:1:0: Enclosure         FSC      FibreCAT_SX1     J110 PQ: 0 ANSI: 3
[    3.972099] sd 5:0:0:0: Attached scsi generic sg4 type 0
[    3.972210] ses 5:0:1:0: Attached scsi generic sg5 type 13
```




=== File System Layout on the catalogue server ===

The following are the key areas of the file system you should be aware of:

==== Opt ====

```
/opt
+-- sac_catalogue
|   +-- python
|   +-- sac_live
|   +-- sac_test
+-- webmapping
    +-- config
    +-- data -> /mnt/cataloguestorage/data/
    +-- fonts
    +-- mapfiles
    +-- scripts
    +-- symbols
    +-- templates
```

==== /usr/local ====

This is the recommended place in which user compile applications should be
installed to. Our installations of gdal, mapserver etc have been placed in this
part of the filesystem when installed.

==== /mnt/cataloguestorage ====

This is the first of two ~13TB storage arrays connected to the server. In this 
storage system, all of the thumbnailas, online remote sensing dataset, backups
and data that is being processed are stored.

```
/mnt/cataloguestorage
+-- backups
|   +-- 2010
|   +-- 2011
+-- data
|   +-- africa
|   +-- thumbs
|   +-- world
|   +-- za
+-- imagery_master_copy
|   +-- C2B
|   +-- S-C
|   +-- ZA2
+-- imagery_processing
|   +-- cbers
|   +-- sacc
|   +-- sumbandilasat
+-- mapproxy
|   +-- etc
|   +-- tmp
|   +-- var
+-- thumbnail_processing
|   +-- georeferenced_segments_out
|   +-- georeferenced_thumbs_out
|   +-- segments_out
|   +-- thumb_blobs
|   +-- to_erase
+-- thumbnails_master_copy
|   +-- C2B
|   +-- cache
|   +-- E1
|   +-- E2
|   +-- L2
|   +-- L3
|   +-- L4
|   +-- L5
|   +-- L7
|   +-- N11
|   +-- N12
|   +-- N14
|   +-- N15
|   +-- N16
|   +-- N17
|   +-- N9
|   +-- S1
|   +-- S2
|   +-- S4
|   +-- S5
|   +-- SACC
|   +-- S-C
|   +-- ZA2
+-- tilecache
    +-- README
    +-- spot5mosaic10m2007
    +-- spot5mosaic10m2007_4326
    +-- spot5mosaic10m2008
    +-- spot5mosaic10m2008_4326
    +-- spot5mosaic10m2009
    +-- spot5mosaic10m2098_4326
    +-- spot5mosaic2m2007
    +-- spot5mosaic2m2008
    +-- spot5mosaic2m2009
    +-- za_vector


```
