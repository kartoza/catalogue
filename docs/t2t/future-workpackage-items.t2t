== Suggested Items for future development ==

With this work package we have added a great amount of infrastructure to the
catalogue in order to allow it to store a variety of different types of
products, covering optical, radar, generic imagery, ordinal and continuous
products. Much of this is infrastructure only at this stage without any
supporting data and so could not be rigourously tested and probably wont cater
for all useage scenarios. Also there were many small items we thought should be
implemented but were beyond the scope of this work package. The items listed
below are a selection of future enhancements that we felt would be benificial
to the catalogue:


=== Automatic creation of virtual products with back referencing ===

**Use case:** A pan sharpened product is actually a cross product of (in the
case of SPOT5) and 'J' image and a 'T' image so the product entry for the pan
sharpened image 'JT' should store references to the images from which it was
assembled When a J and T from the same pass are added to the catalogue, a
'virtual' JT product should automatically be created

**Implementation plan:** Establish rules for creation of composite products and
automatically create these composite products for when new product records are
ingested.
   
=== Composite product discovery / drill down ===

**Use case:** User performs a search and obtains a composite product (e.g.
PanSharpened JT or Mosaicked image) as a result.  In the results table an icon
shows that it is a composite product and that has sub products. Clicking an
icon will expand the product into a tree view containing 1 or more heirachies
of nested products, each with a thumb, metadata link, add to basket icon etc.

Option when ordering e.g. L4 to get its derived products too.

=== Spatial search options ===

**Use case:* Allow user to do spatial search based on: 
-Location based on their ip address
-Named place (using GNIS / GEONAMES gazetteer dataset)
-Saved place (a collection of sptial bookmarks)
-Remember AOI between searches (s a new search defaults to the AOI of the last)
Suggested by Adriaan Van Niekerk
                             
=== Geospatial Products ===

The infrastructure exists in the database for storing geospatial products but
no data yet exists. We can make this process 'smart' 
by creating ingestion routines for various common formats e.g. shapefile, mif,
tif etc. Using the geonames database we can identify the nearest named place to
each dataset and auto create a thematic name and other metadata based on the
contents of the dataset. This would allow data to be ingested with the minimum
of user interaction. This ingestion could be further automated by extending the
metadata editor tool to directly 'push' metadata (and dataset thumbnail) from
the desktop.


=== KMZ Improvements ===

It is possible to embed imagery into kmz documents. We propos an enhancement to
embed georeferenced thumbnails for products in search results / cart / orders
so that they appear as low resolution overlays in google earth.


=== ACS Migrator Updates ===

The migrator to import data and thumbs from the legacy ACS catalogue was not
updated due to being out of scope and due to time constraints. This should be
updated and overhauled so that it runs as a django management command (as with
the newly written migrators for rapideye etc.) and can easily be invoked from a
cron job.


=== Metadata XML schema review ===

The SANSA-EO ISO19115 profile needs to be reviewed. This should be considered a
living document and should be reviewed periodically. However, there is a
pressing need for a review in the short terms so that the concepts decscribed
in the profile closely match the catalogue and that we can reliably ingest the
metadata for any supported product type into the catalogue using only an ISO
Metadata document. Currently the catalogue only ingests documents generated by
DIMS. A parallel effort should be made by Werum to extend the ISO document
their system produces to cater for all product types and metadata elements.


=== Catalogue Product Filtering ===

The new implementation of the catalogue supports filtering of search results to
further reduce the number of records displayed. When a filter is applied, a new
search history is created. We would like to extend this implementation so that
filtering is ephemeral and that only the initial search result is saved.


=== Multi-spectral and spatial resolution support ===

We discovered late in the implementation phase instances where products do not
model well into our schema. In particular products having multiple spectral and
spatial resolutions (e.g. for modis where bands can be 8 bit, 16 bit etc). We
propose a future work activity to implement support for each product being able
to have 1 or more spectral resolutions (bit depths) and spatial resolutions
(pixel size). In tandem existing data would be migrated and search
implementation would need to be updated to cater for this.

=== Enhance security for filedrop ===

The use of a filedrop for depositing e.g. DIMS products onto the catalogue
server for ingestion introduces some security worries. We have performed the
implementation in a fairly secure manner by allowing the filedrop connection
only a restricted shell. However for improved security, we propose that further
work is carried out to implement a 'chroot jail' for this file drop user.

=== User preferences ===

We would like to add to the user interface of the online catalogue a user
preferences area where things like ordering defaults can be set, options on
notifications behaviour for orders (notify when all products in order are
ready, notify on product by product basis) etc.


=== OGC Ordering Service Options ===

**Ordering Options:** We would like to be able to support the propogation of
ordering options (resampling method, processing level etc.) to DIMS via the OGC
OS4EO interface. This would require a parallel implementation from Werum to
implement it on their side too.

**GetQuotation:** In addition we suggest that if DIMS inplemented the
GetQuotation method of the OGC EO Ordering service, we could provide catalogue
users with instant pricing for non free products available in the DIMS Product
Library.


**Remove all locally stored products:** Currently the ~26TB of online storage
on the catalogue server is used to store online copies of many imagery
products. We would like the catalogue to store metadata and thumbnails only,
and to dynamically fetch products from the DIMS product library when a user
requests them. This should happen via the OGC OS4EO interface and the fetched
products should only be stored locally on the catalogue server for 7 days
before being flushed. 

**CSW Client to DIMS:** Currently there is no reasonable way to query DIMS
about its available products or to harvest metadata from DIMS //en masse//. If
DIMS activate their CSW interface we will be able to automatically harvest and
query the upstream DIMS product library.

In general the OGC interface DIMS could not be implemented fully due to issues
with product ID's. As such the work needs to be deferred to a future work
package.

=== Modularise Ingestors ===

Something that was illustrated to us during this work package is the future
shift from relying on one or two ingestors (e.g. from ACS, Sumbandilasat) to a
diverse range of ingestors that cater for all the different product types that
can now be catalogued. The current ingestors have been implemented as django
command modules or as python scripts run interactively on the server. We would
like to change this approach to a more user friendly and modular approach where
we implement a plugin interface with a well described API. Plugins would then
be created and installed into the catalogue (via a simple zip file upload for
administrator users). The plugin install process would be a 'point and click'
operation via the web user interface and the web administrator could set
options for each plugin via a simple we gui. This approach has several
benifits:

- SANSA-EO can easily task vendors or other subcontractors to provide ingestor
  plugins when new products are to be made available in the catalogue
- SANSA-EO can share / sell / provide a 'bare bones' version of the catalogue
  to third parties (e.g. other ground stations) and provide only the needed
  ingestors for that site.
- The import process will be standardised and SANSA-EO technical staff could
  create novel ingestors (e.g. that get fired off at the end of a processing
  chain).
- The maintainability of the system will be improved as the system will be
  highly modularised.
-



=== Desktop Search Support ===

It would be convenient for GIS professionals to be able to search for imagery
from within their desktop GIS environment. INPE has such a tool for QGIS and it
provides an opportunity to evaluate search results within the context of your
own data. We propose to devlop a puplic, programmatic API to the catalogue
(e.g. a REST interface) and to implement QGIS & ArcGIS plugins for performing
searches and visualising results from within the desktop GIS environment.


=== User Notifications ===

Enable notifications when the number of search results for a user's saved
searches changes. This will be implemented by adding a small icon next to each
row in the search results table for the user. When clicked, the icon will
update to indicate that notifications are now enabled. The notifications will
be sent out once a night.



=== Smart Ordering ===

The ordering process can be made more userfriendly and encapsulate better the
logic of the application domain:

- Implement 'smart' ordering options based on processing level and product
  type. e.g. L1Aa products can not be delivered in tif etc. 
- Smart filtering of processing levels available for ordering products.
  Implement logic such that only viable processing levels are listed when
  ordering a product.
- Smart selection of resampling algorithm for ordering products. 
- Implement logic such that only viable resampling algorithms are listed when
  ordering a product.
- Implement per item (search record) delivery status for orders, and logic to
  determine when an order is complete based on all items being ready
-

In addition we suggest that there is an update to the ordering and acquisition
programming forms so that they have similar look to advanced search forms.


=== Data integrity ===

Batch processes need to be implemented that can be run across the entire
database or sections of the database in order to clean anomolies in the
database. 

Items for targetting include:

- checking acquisition start date is consistent with product date (e.g. some landsat
  records are marked with acquisition start in 2093 instead of 1993).
- checking sensor / mode / type are consistent with product ids throughout.
-
